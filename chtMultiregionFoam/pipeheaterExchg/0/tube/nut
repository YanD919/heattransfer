/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2312                                  |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    arch        "LSB;label=32;scalar=64";
    class       volScalarField;
    location    "0/tube";
    object      nut;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [ 0 2 -1 0 0 0 0 ];

internalField   uniform 0;

boundaryField
{
    cyclic
    {
        type            nutUWallFunction;
        value           uniform 0;
    }
    cyclicAMI
    {
        type            nutUWallFunction;
        value           uniform 0;
    }
    cyclicACMI
    {
        type            nutUWallFunction;
        value           uniform 0;
    }
    cyclicSlip
    {
        type            nutUWallFunction;
        value           uniform 0;
    }
    empty
    {
        type            nutUWallFunction;
        value           uniform 0;
    }
    nonuniformTransformCyclic
    {
        type            nutUWallFunction;
        value           uniform 0;
    }
    processor
    {
        type            nutUWallFunction;
        value           uniform 0;
    }
    processorCyclic
    {
        type            nutUWallFunction;
        value           uniform 0;
    }
    symmetryPlane
    {
        type            nutUWallFunction;
        value           uniform 0;
    }
    symmetry
    {
        type            nutUWallFunction;
        value           uniform 0;
    }
    wedge
    {
        type            nutUWallFunction;
        value           uniform 0;
    }
    overset
    {
        type            nutUWallFunction;
        value           uniform 0;
    }
    ".*"
    {
        type            calculated;
        value           uniform 0;
    }
}


// ************************************************************************* //
